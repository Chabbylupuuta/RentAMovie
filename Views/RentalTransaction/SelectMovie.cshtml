@model IEnumerable<RentAMovie_v3.Models.Movie>

@{
    ViewData["Title"] = "Index";
}

<h1>Select Movie</h1>

<p>
    <a asp-action="Create">Create New</a>
</p>
<div>
    <p>
        Search: <input type="text" id="SearchString" placeholder="Search Movie by Title" />
        <input type="submit" onClick="QueryCustomers()" value="Search" />
    </p>
</div>
<div class="row">
    <div class="col-12 d-flex justify-content-center align-items-center" style="flex-direction: column;">
        @foreach (var item in Model) {
            <div class="card p-2 my-2 w-75 d-flex justify-content-between" style="flex-direction: row;">
                <div class="" style="color: black;">
                    @Html.DisplayFor(modelItem => item.Title) @Html.DisplayFor(modelItem => item.YearOfRelease)
                </div>
                <div>
                    <input type="button" name="@item" value="Add" class="btn btn-secondary" />
                </div>
            </div>
        }
    </div>
</div>
<script>
    const rentalTransaction = {
        'movieId': 0,
    }
    const rentalTransactions = Array();

    const searchInput = document.querySelector('#SearchString');

    async function QueryCustomers () {

        var movies = axios.post('/RentalTransaction/Search', {
            'SearchString': searchInput.value
            })
        .then((response) => {
            console.log(response.data);
        })
        .catch((err) => console.log(err));
    }

</script>
